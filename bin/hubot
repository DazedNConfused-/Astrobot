#!/bin/sh

# Based on the following articles:
#   https://gist.github.com/technicalpickles/5941963c502dc43d9d07
#   https://medium.com/@newtmitch/hubot-debugging-and-me-bccb33365710
#   https://stackoverflow.com/questions/3601515/how-to-check-if-a-variable-is-set-in-bash

set -e

npm install
export PATH="node_modules/.bin:node_modules/hubot/node_modules/.bin:$PATH"

# Parse script & bot params
for i in "$@"
do
case $i in
    -d|--debug)
    hubot_debug="coffee --nodejs --inspect"
    shift # past argument with no value
    ;;
    -st=*|--slack-token=*)
    export HUBOT_SLACK_TOKEN="${i#*=}"
    shift # past argument=value
    ;;
    --adapter=*)
    echo "Adapter flag should be passed as a bot parameter, not a script one (ie: --adapter slack). Don't worry, will fix this for you..."
    hubot_adapter="${i#*=}"
    shift # past argument=value
    ;;
    *)
    # unknown option - may be a Hubot parameter, ignore
    ;;
esac
done

# Determine current directory for Hubot-startup-script, following symlinks
# https://stackoverflow.com/a/246128
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
THIS_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Change to script's parent directory (necessary if script is being externally executed - ie: from a symlink)
cd ${THIS_DIR}
cd ..

# Execute Hubot and pass parameters
if [ -z ${hubot_adapter+x} ]; then
  # echo "hubot_adapter is unset";
  exec ${hubot_debug} node_modules/.bin/hubot --name "Astrobot" "$@"
else
  # echo "hubot_adapter is set to '$hubot_adapter'";
  exec ${hubot_debug} node_modules/.bin/hubot --name "Astrobot" "$@" --adapter ${hubot_adapter}
fi
